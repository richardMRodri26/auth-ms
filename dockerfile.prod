# Dependencias
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app

COPY package.json ./
COPY pnpm-lock.yaml ./
RUN npm install -g pnpm
RUN pnpm install




# Builder - Construye la aplicaci贸n
FROM node:21-alpine3.19 as build

WORKDIR /usr/src/app

# Instalar pnpm
RUN npm install -g pnpm

# Copiar de deps, los m贸dulos de node
COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el codigo fuente de la aplicaci贸n
COPY . .

# Generar cliente de Prisma primero
RUN pnpx prisma generate

# RUN pnpm run test
RUN pnpm run build



# Crear la imagen final de Docker
FROM node:21-alpine3.19 as prod

WORKDIR /usr/src/app

# Copiar package.json y lock
COPY package.json ./
COPY pnpm-lock.yaml ./

# Instalar pnpm y solo dependencias de producci贸n
RUN npm install -g pnpm
RUN pnpm install --prod --no-frozen-lockfile

# Copiar archivos generados de Prisma
COPY --from=build /usr/src/app/generated ./generated

# Copiar la carpeta de DIST
COPY --from=build /usr/src/app/dist ./dist

# Copiar archivos de Prisma generados
COPY --from=build /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

USER node

EXPOSE 3000

CMD ["node", "dist/src/main.js"]